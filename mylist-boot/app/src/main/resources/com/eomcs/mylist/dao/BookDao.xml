<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 
  namespace => "인터페이스의 패키지 및 이름"과 일치해야 한다. 
   -->
<mapper namespace="com.eomcs.mylist.dao.BookDao">

<!-- 
    parameterType
 -->

<resultMap type="book" id="bookMap">
<id column="book_no" property="no"/>
<result column="title" property="title"/>
<result column="author" property="author"/>
<result column="press" property="press"/>
<result column="page" property="page"/>
<result column="price" property="price"/>
<result column="read_date" property="readDate"/>
<result column="feed" property="feed"/>
</resultMap>


<!-- 
    id => 인테페이스의 메서드 이름과 일치해야 한다.
 -->
  <select id="countAll" resultType="int">
   select count(*) 
   from ml_book
  </select>

  <select id="findAll" resultMap="bookMap">
   select 
   title,
    book_no,
    author,
    press,
    page,
    price,
    read_date
   from 
    ml_book 
   order by 
   title asc
  </select>
  
  <insert id="insert" parameterType="book" >
  insert into ml_book(title,author,press, feed, read_date, page, price) 
  values(#{title},#{author},#{press},#{feed},#{readDate},#{page},#{price})
  </insert>
  
  <!-- 
  parameterType 들어오는 파라미터 타입 설정
   -->
  
  <select id="findByNo" parameterType="int" resultMap="bookMap">
  
  select 
    book_no,
    title,
    author,
    feed,
    read_date,
    page,
    price  
  from 
    ml_book 
  where 
    book_no = #{no} 
  </select>
  
  
  <update id="update" parameterType="Book">
  update 
    ml_board 
  set 
    title = #{title}, 
    author = #{author},
    feed = #{feed},
    read_date = #{readDate},
    page = #{page},
    price = #{price} 
  where 
    book_no = #{no}
  </update>
  
 
 <delete id="delete" parameterType="int">
   delete from ml_book 
   where book_no=#{no}
 </delete>
   
</mapper>